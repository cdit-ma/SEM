syntax = "proto3";

package re.network.protocol.experimentregistration;

message ExperimentDefinition {
    string name = 1;
    string uuid = 2;

    repeated ClusterDefinition clusters = 3;
    repeated NodeDefinition nodes = 4;
    repeated ContainerDefinition containers = 5;
    repeated ComponentDefinition components = 6;
    repeated PortDefinition ports = 7;
    repeated WorkerDefinition workers = 8;
    repeated LoggerDefinition loggers = 9;
    repeated TriggerDefinition triggers = 10;

    string medea_id = 11;
}

message ClusterDefinition {
    string name = 1;
    string uuid = 2;

    repeated string node_uuids = 3;
    repeated string container_uuids = 4;
    repeated string logger_uuids = 5;

    string medea_id = 6;

}

message NodeDefinition {
    string name = 1;
    string uuid = 2;
    string ip_address = 3;

    repeated string container_uuids = 4;

    string medea_id = 5;
}

message ContainerDefinition {
    string name = 1;
    string uuid = 2;
    string medea_id = 3;

    repeated string component_uuids = 4;
    repeated string assembly_uuids = 5;
    repeated string logger_uuids = 6;

    enum ContainerType {
        IMPLICIT = 0;
        PROCESS = 1;
        DOCKER = 2;
    }

    ContainerType type = 7;
    bool late_joiner = 8;
}

message AssemblyDefinition {
    string name = 1;
    string uuid = 2;
    repeated string assembly_uuids = 3;
    repeated string component_uuids = 4;
    uint32 replication_count = 5;

    string medea_id = 6;
}

message ComponentDefinition {
    string name = 1;
    string uuid = 2;

    repeated string port_uuids = 3;
    repeated string worker_uuids = 4;
    repeated string trigger_uuids = 5;
    repeated string attribute_uuids = 6;

    string medea_id = 7;
    string medea_type = 8;
    repeated string medea_namespaces = 9;

}

message PortDefinition {
    enum Kind {
        NO_KIND = 0; // Protobuf sentinel/default value
        PERIODIC = 1;
        PUBLISHER = 2;
        SUBSCRIBER = 3;
        REQUESTER = 4;
        REPLIER = 5;
    }

    string name = 1;
    string uuid = 2;
    enum Middleware {
        NO_MIDDLEWARE = 0; // Protobuf sentinel/default value
        ZMQ = 1;
        RTI = 2;
        OSPL = 3;
        QPID = 4;
        TAO = 5;
    }
    Middleware middleware = 3;
    repeated string attribute_uuids = 4;
    repeated string connected_port_uuids = 5;
    repeated string connected_external_ports = 6;
    repeated string server_name = 7;

    string medea_id = 8;
    string medea_type = 9;
    repeated string medea_namespaces = 10;
}

message WorkerDefinition {
    string name = 1;
    string uuid = 2;
    string medea_id = 3;
    repeated string attribute_uuids = 4;
    string medea_type = 5;
}

message LoggerDefinition {
    string name = 1;
    string uuid = 2;
    string medea_id = 3;

    enum Mode {
        OFF = 0;
        LIVE = 1;
        CACHED = 2;
    }

    enum Type {
        NONE = 0;
        MODEL = 1;
        CLIENT = 2;
        SERVER = 3;
        EXPERIMENT = 4;
    }

    Type type = 4;
    //client args
    string publisher_address = 5;
    string publisher_port = 6;
    double frequency = 7;
    Mode mode = 8;

    //server args
    repeated string client_ids = 9;
    string db_file_name = 10;
    repeated string client_addresses = 11;

    //processes to log
    repeated string processes = 12;
}

message TriggerDefinition {
    string name = 1;
    string uuid = 2;
    string medea_id = 3;

    enum Metric {
        CPU_UTIL = 0; // Prototype will be based on CPU as a whole rather than a specific core
        MEM_UTIL = 1;
    }
    enum Comparator {
        EQUAL = 0;
        GREATER = 1;
        LESS = 2;
        GREATER_OR_EQUAL = 3;
        LESS_OR_EQUAL = 4;
    }

    Metric metric = 4;
    Comparator comparator = 5;
    double value = 6;
    bool single_activation = 7;
    uint64 reactivation_disabled_ms = 8;

    string strategy_uuid = 9;
}

message StrategyDefinition {
    string name = 1;
    string uuid = 2;
    string medea_id = 3;

    string container_definition_uuid = 4;
}
