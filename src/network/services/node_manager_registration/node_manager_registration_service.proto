syntax = "proto3";

package sem.network.services.node_manager_registration;

service NodeManagerRegistrar {
    rpc RegisterNodeManager (RegistrationRequest) returns (RegistrationReply);
    rpc DeregisterNodeManager (DeregistrationRequest) returns (DeregistrationReply);
}

message RegistrationRequest {
    string uuid = 1;

    // sem::types::Ipv4
    string control_ip_address = 2;
    // sem::types::Ipv4
    string data_ip_address = 3;
    string hostname = 4;
    string library_path = 5;

    // sem::types::SocketAddress
    string node_manager_control_endpoint = 6;
}

message RegistrationReply {
    bool success = 1;
    string message = 2;
}

message DeregistrationRequest {
    string uuid = 1;
}

message DeregistrationReply {
    bool success = 1;
    string message = 2;
}